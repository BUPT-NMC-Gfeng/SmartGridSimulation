import matplotlib.pyplot as plt
import numpy as np
from pylab import mpl
mpl.rcParams['font.sans-serif'] = ['STZhongsong']    # 指定默认字体：解决plot不能显示中文问题
mpl.rcParams['axes.unicode_minus'] = False           # 解决保存图像是负号'-'显示为方块的问题

def draw_netload():
    x = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]  # 点的横坐标
    net_load1 = [1014, 817, 799, 687, 649, 613, 523, 264, 242, 102, -137, -159, -183, -154, -78, -82, 148, 558, 944,
                 1436, 1573, 1601, 1324, 1037]
    net_load2 = [242, 219, 219, 197, 197, 189, 113, 39, -21, -7, 16, 36, -14, 19, 1, 15, 82, 172, 239, 221, 205, 278,
                 236, 246]
    net_load3 = [134, 100, 92, 93, 89, 93, 99, 100, 110, 172, 210, 125, 56, 5, -16, 11, 72, 130, 168, 169, 187, 155,
                 147, 124]
    # net_load = net_load1 + net_load2 + net_load3
    net_load = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ]
    for i in range(24):
        net_load[i] = net_load1[i] + net_load2[i] + net_load3[i]
    # print(net_load)
    net_load = [1390, 1136, 1110, 977, 935, 895, 735, 403, 331, 267, 89, 2, -141, -130, -93, -56, 302, 860, 1351, 1826, 1965, 2034, 1707, 1407]
    plt.plot(x, net_load1, 's-', color='r', label="工业区")  # s-:方形
    plt.plot(x, net_load2, 'o-', color='g', label="商业区")  # o-:圆形
    plt.plot(x, net_load3, 'x-', color='b', label="居民区")  # o-:圆形
    plt.plot(x, net_load, '*-', color='y', label="系统总负载")  # o-:圆形
    plt.xlabel("时间")  # 横坐标名字
    plt.ylabel("能耗(kWh)")  # 纵坐标名字
    plt.legend(loc="best")  # 图例
    plt.savefig('netload.jpg')
    plt.show()

def draw_ag_income():
    x = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]  # 点的横坐标
    # 内部电价收益
    # R = [895.16, 731.5840000000001, 714.84, 629.188, 602.1400000000001, 576.3800000000001, 473.34000000000003,
    #      259.53200000000004, 321.7640000000002, 350.26400000000024, 249.5360000000002, 159.34600000000015, 0, 0, 0, 0,
    #      322.5360000000002, 918.4800000000004, 1442.8680000000006, 1950.168000000001, 2420.880000000001,
    #      2505.8880000000013, 2103.0240000000013, 1733.4240000000007]
    #新
    # R=[984.6400000000001, 720.4765000000001, 709.5525, 582.7355000000001, 569.215, 467.40999999999997, 412.7775, 274.8545,
    #  464.5020000000002, 618.2870000000005, 467.5515000000003, 259.0560000000002, 0, 0, 0, 0, 542.9685000000004,
    #  876.7050000000005, 1417.1055000000006, 1826.4930000000008, 2214.1425000000013, 2292.6255000000015,
    #  1925.611500000001, 1578.474000000001]
    #
    # k1 = [0,0,0,0,0,0,0,0,-50,148,131,172,-3,22,109,155,17,0,0,-4,0,386,201,0]-论文数据
    # k1 = [0,0,71,62,60,37,27,6,32,95,25,10,0,0,0,0,32,92,144,195,242,297,301,173]-旧
    # 对比baseline
    # k2 = [0,0,-10,0,0,0,0,-51,12,155,122,58,-52,-55,-20,80,8,0,0,-4,0,265,281,0]

    k1 = [0,0,0,47,41,27,46,61,46,61,47,26,0,0,0,0,54,88,141,182,221,229,190,140]
    plt.plot(x, k1, 'x-', color='b')  # s-:方形
    # plt.plot(x, k2, 's-', color='g', label="Aggregator revenue-grid price")  # o-:圆形
    plt.xlabel("时间")  # 横坐标名字
    plt.ylabel("聚合器收益（元）")  # 纵坐标名字
    plt.legend(loc="best")  # 图例
    # plt.axhline(y=0, c="#000000", ls="--", lw=2)
    plt.savefig('ag_income.jpg')
    plt.show()

def draw_BS_income():
    x = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]  # 点的横坐标

    # BU = [[-329 - 265 - 259 - 222 - 210 - 177 - 133 - 14    50 - 24 - 213 - 244
           #    -274  -231  -154  -134    89  -148  -401  -701 -1043 -1062  -878  -688]
           #  [  -70   -63   -63   -57   -57   -35     0    -6   -78  -100  -106  -107
           #    -157  -112   -99   -67    50    59   -42   -85   -59   -80   -68   -71]
           #  [  -38   -28   -26   -26   -25    -7     3    25    11    23    27   -46
           #    -109  -121  -111   -69    42    72    -1   -56   -54   -44   -42   -35]]
    # 工业区
    # k1 = [0,0,0,0,0,0,0,0,0,0,9,49,0,22,46,46,0,0,0,0,0,0,0,0]
    k1 = [-329,-265,-259,-222,-210,-177,-133,-14,50,-24,-213,-244,-274,-231,-154,-134,89,-148,-401,-701,-1043,-1062,-878,-688]
    # 商业区
    k2 = [-70,-63,-63,-57,-57,-35,0,-6,-78,-100,-106,-107,-157,-112,-99,-67,50,59,-42,-85,-60,-80,-68,-71]
    # 居民区
    k3 = [-38,-28,-26,-26,-25,-7,3,25,11,23,27,-46,-109,-121,-111,-69,42,72,-1,-56,-54,-44,-42,-35]
    plt.plot(x, k1, 'x-', color='b', label="工业区")  # s-:方形
    plt.plot(x, k2, 's-', color='g', label="商业区")  # o-:圆形
    plt.plot(x, k3, 'o-', color='r', label="居民区")  # o-:圆形
    plt.xlabel("时间")  # 横坐标名字
    plt.ylabel("基站收益（元）")  # 纵坐标名字
    plt.legend(loc="best")  # 图例
    # plt.axhline(y=0, c="#000000", ls="--", lw=2)
    plt.savefig('bs_income.jpg')
    plt.show()

def draw_energy():
    ATT_LSTM = [28118, 19202]
    MATT_CNN = [0, 8916]
    x = np.arange(2)  # 总共有几组，就设置成几，我们这里有三组，所以设置为3
    total_width, n = 0.4, 2  # 有多少个类型，只需更改n即可，比如这里我们对比了四个，那么就把n设成4
    width = total_width / n
    x = x - (total_width - width) / 2
    # '#5cb85c', '#5bc0de'
    plt.bar(x, ATT_LSTM, color="#5cb85c", width=width, label='传统能源')
    plt.bar(x + width, MATT_CNN, color="#5bc0de", width=width, label='可再生能源')
    plt.xlabel(" ")
    plt.ylabel("能耗（kwh）")
    plt.legend(loc="best")
    plt.xticks([0, 1], ['传统能源供应模式', '参与能源共享'])
    my_y_ticks = np.arange(0,30000, 5000)
    plt.ylim((0, 30000))
    plt.yticks(my_y_ticks)
    # for x, y in enumerate(y_list):
    #     plt.text(x, y + y_max / 20, str(round(percentage[x], 2)), ha='center')
    plt.savefig('energy.jpg')
    plt.show()


def draw_pv():
    x = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]  # 点的横坐标
    Ex1 = [1014, 817, 799, 687, 649, 583, 472, 165, 53, -178, -482, -549, -618, -523, -373, -310, -20, 443, 875, 1406,
           1573, 1601, 1324, 1037]
    Ex2 = [242, 219, 219, 197, 197, 159, 62, -60, -210, -287, -329, -354, -449, -350, -294, -213, -86, 57, 170, 191,
           205, 278, 236, 246]
    Ex3 = [134, 100, 92, 93, 89, 63, 48, 1, -79, -108, -135, -265, -379, -364, -311, -217, -96, 15, 99, 139, 187, 155,
           147, 124]

    k0 = [813, 794, 715, 675, 667, 646, 465, 501, 562, 564, 598, 709, 701, 664, 702, 663, 823, 1151, 1479, 1549, 1455,
          1199, 1030, 990]
    # sumk0 = 0
    # for i in range(24):
    #     k0[i] = Ex1[i]+Ex2[i]+Ex3[i]
    #     sumk0 += k0[i]
    # print(sumk0)
    k1 = [1390, 1136, 1110, 977, 935, 895, 735, 403, 331, 267, 89, 2, -141, -130, -93, -56, 302, 860, 1351, 1826, 1965, 2034, 1707, 1407]  # 线1的纵坐标
    # k1 = [813, 794, 715, 675, 667, 646, 465, 403, 331, 267, 89, 2, -141, -130, -93, -56, 302, 1050, 1400, 1497, 1455,
    #       1199, 1030, 990]  # 线1的纵坐标
    sumk1 = 0 # k1求和
    for i in range(24):
        sumk1 += k1[i]
    print(sumk1)

    pv = [0, 0, 0, 0, 0, 0, 0, 99, 189, 280, 345, 390, 435, 369, 295, 228, 168, 115, 29, 30, 0, 0, 0, 0]
    sumk0 = 0
    for i in range(24):
        k0[i] = k1[i]+pv[i]*3
        sumk0 += k0[i]


    # k2 = [1080, 884, 863, 761, 729, 536, 297, 92, 0, 0, 0, 0, 24, 0, 86, 80, 0, 37, 423, 868, 1049, 1096, 926, 782]  # 线2的纵坐标
    xo = [
        [773,623,609,524,495,445,360,126,43,145,345,390,505,427,305,253,30,248,491,788,729,742,613,480],
        [198,179,179,161,161,130,52,49,171,234,269,289,367,286,240,174,70,30,88,99,167,227,193,201],
        [109,82,75,76,73,51,39,30,65,88,110,216,309,297,254,177,78,30,51,71,153,127,120,101],
    ]
    # k2 = []  # 线2的纵坐标
    # for t in range(24):
    #     k2.append(xo[0][t]+xo[1][t]+xo[2][t])
    k2 = [1080, 884, 863, 761, 729, 626, 451, 200, 239, 209, 24, 5, 17, 10, 9, 4, 7, 108, 630, 1826, 1965, 2034, 1707, 1407]
    # sumk2=0
    # for i in range(24):
    #     sumk2 += k2[i]
    # print(sumk2)
    # k0 = 10023
    # k1 = 14370
    # k2 = 13678
    plt.plot(x, k0,'s-',color='b', label="传统能源供应")  # s-:方形
    plt.plot(x, k1, 'o-',color='g', label="接入可再生能源")  # o-:圆形
    plt.plot(x, k2, 'x-',color='r', label="参与能源共享")  # o-:圆形
    plt.xlabel("时间")  # 横坐标名字
    plt.ylabel("能耗（kwh）")  # 纵坐标名字
    plt.legend(loc="best")  # 图例
    plt.savefig('trad_vs_org.jpg')
    plt.show()


# x = [
#     [773,623,609,524,495,445,360,126,43,145,345,390,505,427,305,253,30,248,491,788,729,742,613,480],
#     [198,179,179,161,161,130,52,49,171,234,269,289,367,286,240,174,70,30,88,99,167,227,193,201],
#     [109,82,75,76,73,51,39,30,65,88,110,216,309,297,254,177,78,30,51,71,153,127,120,101],
# ]
# Ex = [
#     [1014, 817, 799, 687, 649, 583, 472, 165, 53, -178, -482, -549, -618, -523, -373, -310, -20, 443, 875, 1406,1573, 1601, 1324, 1037],
#     [242, 219, 219, 197, 197, 159, 62, -60, -210, -287, -329, -354, -449, -350, -294, -213, -86, 57, 170, 191,205, 278, 236, 246],
#     [134, 100, 92, 93, 89, 63, 48, 1, -79, -108, -135, -265, -379, -364, -311, -217, -96, 15, 99, 139, 187, 155,147, 124],
# ]
# draw_pv()
# draw_energy()
# draw_netload()
# draw_BS_income()
draw_ag_income()

